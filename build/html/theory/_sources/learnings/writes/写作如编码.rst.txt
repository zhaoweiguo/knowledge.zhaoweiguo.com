写作如编码
##########


* 写作：写字如编码

把每一篇文字当作一个需求，把写作当成在编码的过程去完成这个需求，它会非常类似于程序开发的整个过程，包括需求、设计、实现、测试和交付五个阶段。

一. 需求
========

.. note:: 程序的需求，对应于写作的主题。

写作主题的来源可以有很多方面::

    1. 身边的工作和生活中的事件引发的感触；
    2. 阅读过程中突然产生的启发与领悟；
    3. 曾经一直困惑的问题突然碰到或找到了答案
    这些都属于灵感乍现的时刻，也是我写作主题的来源。

随时记录下来，形成一个主题列表。这个主题列表，就有些像产品的需求特性列表了，呆在需求池里等待被 “实现”，也即，“写出来”。随手记录的主题可能很多，但真正能写的时间和精力却有限，因此你得挑选值得写的主题。如果把每一篇文字想象成一件产品，那么定义写作的主题，就像定义产品的灵魂，你得确定一个产品的目标、定位，以及面向的读者人群。

.. note:: 一个好的主题很可能是一篇好文字的开端，毕竟如果一开始产品方向错了，实现得再好又能有多大意义呢？


二. 设计
========

1. 概要设计::

    在软件程序系统的设计中，这部分内容主要是:
        架构设计，系统或子系统的拆分、交互逻辑、边界等。
    而对于写作而言，这部分对应的就是设计本篇文字的逻辑结构，
        换言之，即在主题确定的基础上，采用怎样的逻辑去展开主题，形成合适的衔接

2. 详细设计::

    围绕主题想表达的观点，考虑需要添加哪些支撑观点的素材，
        以及设计整理、引出和排布这些素材的方式。
    而为了让文字更有阅读的趣味，还需要有适当的故事，
        因为人们都喜欢读故事，而非说教，
        那故事又该如何切入与布局？这也是需要考虑的点。

三. 实现
========

.. note:: 写文字和编码在实现层面最大的差异是：实现过程的技能和要求不同。

.. important:: 写程序和写文章，本是两种不同的 “武功”，“心法” 可以类似，但 “招式” 自不相同。而 “招式” 的积累与应用，无论写程序还是写文字，都没有什么捷径可走，只能多看、多写、多练。

除此之外，写程序和写文字的实现过程的环境要求也有类似之处：程序员写代码的时候很讨厌被人打断，需要一段能安静且专注的时间，通常 2～4 小时不等。写作也一样。所以，我经常选择在晚上夜深人静的时候进行写作的 “实现” 阶段。
不仅程序员是这样，很多知名作家也都有自己独特的写作过程要求，他们的共性都是需要一段能实现不被打扰且专注的时间::

    村上春树
    海明威

在这个过程中，你也可能会产生意外的大脑神经元连接，获得一些更高质量的思考，灵光乍现的启发，以及更好的文字表达。

四. 测试
========

写作的过程中，大脑从冷的状态逐步升温，直到进入一种很热的状态，文字就是在这样的状态下自然流淌出来的。直到写完之前，大脑一直在高速运作，就像一颗 100% 利用率的 CPU，它的温度很高。写完后，CPU 终于降低了负载，但温度的降低还需要一个过程。
而对写完的文字再读一遍，进行再编辑和优化，这就像软件开发中的测试过程。但我需要在一个冷却的状态下进行，站在一个读者或编者的视角去重新审视这篇文章。所以，这个过程通常发生在写作完成后的一天或几天之后。这中间的间隔，我称之为写作后的冷却时间。只有在冷却的状态下，我才能更客观地检视自己写的文字，同时进行合适地编辑和修改，这个过程就是对文字的测试。

五. 交付
========

写作本身是一个不断积累压力的过程，而交付之后则完成了一种压力的释放与转换。关于这一点，和菜头描述得特别精确:

.. note:: 写作真正的压力来自于完成一件事情的压力，你要么一开始连个标题都想不出来，要么写两段之后就不知道如何继续下去。写第一篇文章会是一次漫长而痛苦的自我挣扎，你大概有 30% 的精力花在构思内容上，剩下 70% 的精力花在自我怀疑和自我否定上。

交付，就是发布这篇新写的文字，让它面对读者，获得反馈与验证价值。从作者的角度出发，交付的目的之一是希望有一些更有价值、值得思考和讨论的声音出现。写作与文字的价值实现分两部分，写完后就完成了对自我的价值实现，而交付后才算完成了对他人的价值实现。


参考
====

* 极客时间：程序员进阶攻略（胡峰）- 30 | 写作：写字如编码



