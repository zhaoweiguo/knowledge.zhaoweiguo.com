.. _shell_introduce:

Shell 通配符、元字符、转义符使用实例介绍
#################################################

shell元字符(特殊字符 Meta)
---------------------------------
::

    IFS 由 <space> 或 <tab> 或 <enter> 三者之一组成(我们常用 space )。
    CR  由 <enter> 产生。
    =   设定变量。
    $   作变量或运算替换(请不要与 shell prompt 搞混了)。
    >   重导向 stdout
    <   重导向 stdin
    |   命令管线
    &   重导向 file descriptor ，或将命令置于背境执行
    ( ) 将其内的命令置于 nested subshell 执行，或用于运算或命令替换
    { } 将其内的命令置于 non-named function 中执行，或用在变量替换的界定范围
    ;   在前一个命令结束时，而忽略其返回值，继续执行下一个命令
    &&  在前一个命令结束时，若返回值为 true，继续执行下一个命令
    ||  在前一个命令结束时，若返回值为 false，继续执行下一个命令
    !   执行 history 列表中的命令

shell转义符
---------------
::

    ‘’(单引号)  又叫硬转义，其内部所有的shell 元字符、通配符都会被关掉。注意，硬转义中不允许出现’(单引号)
    “”(双引号)      又叫软转义，其内部只允许出现特定的shell 元字符：$用于参数代换 `用于命令代替
    \(反斜杠)         又叫转义，去除其后紧跟的元字符或通配符的特殊意义 



