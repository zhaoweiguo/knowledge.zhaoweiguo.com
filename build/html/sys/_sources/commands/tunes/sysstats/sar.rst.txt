sar命令
============
参数说明::

  -A 显示所有历史数据，通过读取/var/log/sar目录下的所有文件，并把它们分门别类的显示出来
  -b 通过设备的I/O中断读取设置的吞吐率；
  -B 报告内存或虚拟内存交换统计；
  -c 报告每秒创建的进程数；
  -d 报告物理块设备（存储设备）的写入、读取之类的信息，如果直观一点，可以和p参数共同使用，-dp
  -f 从一个二进制的数据文件中读取内容，比如 sar -f filename
  -i interval 指定数据收集的时间，时间单位是秒；
  -n 分析网络设备状态的统计，后面可以接的参数有 DEV、EDEV、NFS、NFSD、SOCK等。比如-n DEV
  -o 把统计信息写入一个文件，比如 -o filename ；
  -P 报告每个处理器应用统计，用于多处理器机器，并且启用SMP内核才有效；
  -p 显示友好设备名字，以方便查看，也可以和-d和-n 参数结合使用，比如 -dp 或-np
  -r 内存和交换区占用统计
  -R
  -t 这个选项对从文件读取数据有用，如果没有这个参数，会以本地时间为标准 读出；
  -u 报告CPU利用率的参数；
  -v 报告inode,文件或其它内核表的资源占用信息；
  -w 报告系统交换活动的信息； 每少交换数据的个数；
  -W 报告系统交换活动吞吐信息；
  -x 用于监视进程的，在其后要指定进程的PID值；
  -X 用于监视进程的，但指定的应该是一个子进程ID
  注: 如果只用sar 命令，sar就是读取 /var/log/sa目录下最近系统状态文件。sar -A 读取/var/log/sa目录下所有文件数据。

实例::

  // 每秒更新一次数据，总共更新五次
  sar -u  1 5
  说明:
  CPU：表示机器内所有的CPU；
  %user 表示CPU的利用率；
  %nice 表示CPU在用户层优先级的百分比，0表示正常；
  %system 表示当系统运行时，在用户应用层上所占用的CPU百分比；
  %iowait 表示请求硬盘I/0数据流出时，所占用CPU的百分比；
  %idle 表示空闲CPU百分比，值越大系统负载越低

  // 查看网络吞吐量
  sar -n DEV 2 5    //每2秒更新一数据，共更新5次
  说明:
  IFACE：设备名；
  rxpck/s:每秒收到的包；
  rxbyt/s：每秒收到的所有包的数量 ；
  txbyt/s：每秒发送的所有包的数量 ；
  txbyt/s：每秒发送的所有包的大小；
  rxcmp/s：每秒收到数的据压缩包的数量；
  txcmp/s :每秒传输的数据压缩包的数据；
  rxmcst/s: 每秒收到的多播的包数量；




::

   //日志目录
   /var/log/sysstat/

   $sar -f /var/log/sysstat/sa28 \| head sar -r -f   // 追溯过去的统计数据
   

   //查看平均负载
   sar -q 1 10
   //查看内存使用状况
   sar -r 1 10
   //查看页面交换发生状况
   sar -W 1 10


  sar -n SOCK -t 1
