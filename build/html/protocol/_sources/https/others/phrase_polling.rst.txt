.. _phrase_polling:

轮询、长轮询、长连接
=====================================


说明一
----------

* 轮询(polling)::

    客户端定时向服务器发送Ajax请求，服务器接到请求后马上返回响应信息并关闭连接:
    * 优点：后端程序编写比较容易
    * 缺点：请求中有大半是无用，浪费带宽和服务器资源
    * 实例：适于小型应用

* 长轮询(long-polling)::

    客户端向服务器发送Ajax请求,服务器接到请求后hold住连接,直到有新消息才返回响应并关闭连接,客户端处理完响应信息后再向服务器发送新的请求
    * 优点：在无消息的情况下不会频繁的请求
    * 缺点：服务器hold连接会消耗资源
    * 实例：WebQQ、Hi网页版、Facebook IM

.. note:: 另外，对于长连接和socket连接也有区分



* 长连接::

    在页面里嵌入一个隐蔵iframe，将这个隐蔵iframe的src属性设为对一个长连接的请求，服务器端就能源源不断地往客户端输入数据
    * 优点：消息即时到达，不发无用请求
    * 缺点：服务器维护一个长连接会增加开销
    * 实例：Gmail聊天

* Flash Socket::

    在页面中内嵌入一个使用了Socket类的 Flash 程序JavaScript通过调用此Flash程序提供的Socket接口与服务器端的Socket接口进行通信
    JavaScript在收到服务器端传送的信息后控制页面的显示
    * 优点：实现真正的即时通信，而不是伪即时
    * 缺点：客户端必须安装Flash插件；非HTTP协议，无法自动穿越防火墙
    * 实例：网络互动游戏


说明二
--------

* 轮询(Polling)::

    是指不管服务器端有没有更新，客户端(通常是指浏览器)都定时的发送请求进行查询
    轮询的结果可能是服务器端有新的更新过来，也可能什么也没有，只是返回个空的信息。
    不管结果如何，客户端处理完后到下一个定时时间点将继续下一轮的轮询。

* 推送或叫长连接(Long-Polling)的服务

    其客户端是不做轮询的，客户端在发起一次请求后立即挂起，一直到服务器端有更新的时候，服务器才会主动推送信息到客户端。 
    在服务器端有更新并推送信息过来之前这个周期内，客户端不会有新的多余的请求发生，服务器端对此客户端也啥都不用干，只保留最基本的连接信息
    一旦服务器有更新将推送给客户端，客户端将相应的做出处理，处理完后再重新发起下一轮请求。

* 例子-轮询模式::

    假设是客户端每2秒轮询一次，那么客户端每2秒就会发送一次请求，相应的服务器端每2秒就要响应这个客户端的一次请求。
    而实际上服务器端可能1秒钟后就有更新，也可能1分钟后才有更新。
    对于1秒钟就有更新的，客户端至少会有1秒钟的延时；
    而1分钟后才有更新的，只有最后一次查询有意义，这一分钟内的轮询其实都是没有必要的，服务器端和客户端均有资源的浪费。

* 例子-推送模式::
    
    客户端发送一次请求后马上挂起等待服务器端响应，可能1秒，也可能10秒钟，也可能1分钟。
    如果服务器端是1秒就有更新，那么到1秒钟时客户端马上就收到更新了
    如果是1分钟才有更新，那么整个一分钟客户端也只请求一次，服务器也只会相应一次，这个跟轮询的区别是不是已经很清楚了。


原理图
----------

* 长连接工作原理图:

.. figure:: https://img.zhaoweiguo.com/knowledge/images/protocols/http_keep-alive.jpg
   :width: 50%

* 长轮询工作原理图:

.. figure:: https://img.zhaoweiguo.com/knowledge/images/protocols/http_long-polling.jpg
   :width: 50%





