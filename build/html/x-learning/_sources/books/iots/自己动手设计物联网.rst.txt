自己动手设计物联网
##################


1995 年比尔·盖茨的《未来之路》一书也提出了物联网的概念。通常来说，人们所说的物联网（ The Internet of Things ）的概念最早于 1999
由美国 Auto-ID 公司提出，当时主要是建立在物品编码、盯 技术和互联网基础上。2005 年，国际电信联盟发布了《ITU 互联网报告 2005 ：物联网》，报告中
指出：无所不在的“物联网”通信时代即将来临。2009 年 1 月， IBM 首席执行官彭明盛提出“智慧地球”构想，其中物联网
为“智慧地球”不可或缺的一部分。同年，奥巴马在就职演讲后己对“智慧地球”
构想提出积极回应。温家宝总理在 月提出了“感知中国”，物联网被正式列为国
家五大新兴战略性产业之一。



WiFi、蓝牙协议、红外通信协议、OTG、 NFC
Zigbee Z-Wave Thread 6LoWPAN 等短距离无线通信协议／技术

Z-Wave 是一种新兴的基于射频的、低成本、低功耗、高可靠、适于网络的短距
离无线通信技术。工作频带为 908.42MHz 美国）～868.42MHz 欧洲〉，采用 FSK
（ BFSK/GFSK ）调制方式，数据传输速率为 9.6 kbps ，信号的有效覆盖范围在室内是
30m ，室外可超过 1OOm ，适合于窄带宽应用场合。随着通信距离的增大，设备的复
杂度、功耗以及系统成本都在增加，相对于现有的各种无线通信技术， Z-Wave 技术
将是最低功耗和最低成本的技术，有力地推动着低速率无线个人区域网

Thread 一种基于简化版 IPv6 的网状网络协议，该协议由行业领先的多家技术
公司联合开发，旨在实现家庭中各种产品间的互联，以及与互联网和云的连接。 Thread
基于低成本、低功耗的 802.15.4 芯片组开发， Thread 易于安装、高度安全，并且可
扩展到数百台设备。目前正在使用的大量产品，只需一次简单的软件升级，便可支持 Thread

ZigBee 是基于 IEEE 802.15.4 标准的低功耗局域网协议。根据国际标准规定，ZigBee 技术是 种短距离、低功耗的无线通信技术。这一名称（又称紫蜂协议）来
源于蜜蜂的八字舞，由于蜜蜂（bee ）靠飞翔和“嗡嗡”（ zig ）地抖动翅膀的“舞蹈”
来与同伴传递花粉所在的方位信息，也就是说，蜜蜂依靠这样的方式构成了群体中
的通信网络。其特点是近距离、低复杂度、自组织、低功耗、低数据速率。主要适
合用于自动控制和远程控制领域，可以嵌入各种设备。简而言之， ZigBee 就是一种
便宜的、低功耗的近距离无线组网通信技术。

6LoWPAN 取得的突破是得到一种非常紧凑、高效的实现，消除了以前造成
的各种专门标准和专有协议的因素。这在工业协议（BACNet LonWorks、通用工业
协议和监控与数据采集）领域具有特别的价值。这些协议最初的开发是为了提供特
殊的行业特有的总线和链路（从控制器区域网总线到 AC 电源线）上的互操作性

ulP 由瑞典计算机科学学院（网络嵌入式系统小组）的 Adam Dunkels 开发。其
源代码由 C 语言编写，并且完全公开。 uIP 协议梳去掉了完整的 TCP/IP 中不常用
的功能，简化了通信流程，但保留了网络通信必须使用的协议，设计重点放在了
IP/TCP/ICMP/UDP/ARP 这些网络层和传输层协议上，保证了其代码的通用性和结构
的稳定性。

NFC 近场通信技术是由非接触式射频识别( RFID ）及互联互通技术整合演变而
来，在单一芯片上结合感应式读卡器、感应式卡片和点对点的功能，能在短距离内
与兼容设备进行识别和数据交换。工作频率为 13.56MHz 。但是使用这种手机支付方
案的用户必须更换特制的手机。目前这项技术在日韩被广泛应用。手机用户凭着配
置了支付功能的手机就可以行遍全国：他们的手机可以用作机场登机验证、大厦的
门禁钥匙、交通一卡通、信用卡、支付卡等。

WiFi 一种可以将个人电脑、手持设备（如 Pad 、手机）等终端以无线方式互
相连接的技术，事实上它是一个高频无线电信号。无线保真是一个无线网络通信技
术的品牌，由 Wi-Fi 联盟所持有，目的是改善基于 IEEE 802.11 标准的无线网路产品
之间的互通性。有人把使用 IEEE 802.11 系列协议的局域网称为无线保真，甚至把无
线保真等同于无线网际网路（ Wi-Fi WLAN 的重要组成部分）。


FreeRTOS 一个迷你操作系统内核的小型嵌入式系统。作为一个轻量级的操作
系统，功能包括：任务管理、时间管理、信号量、消息队列、内存管理、记录功能
等，可基本满足较小系统的需要。由于 RTOS 需占用一定的系统资源（尤其是 RAM
资源） ，只有 µC/OS-II、 embOS、 salvo、 FreeRTOS 等少数实时操作系统能在小 RAM
单片机上运行。相对于 µC/OS-II、 embOS 等商业操作系统， FreeRTOS 操作系统是完
全免费的操作系统，具有源码公开、可移植、可裁减、调度策略灵活的特点，可以
方便地移植到各种单片机上运行，其最新版本为 8.0.0


LwIP Light Weight （轻型） IP 协议，有无操作系统的支持都可以运行 LwIP
实现的重点是在保持 TCP 协议主要功能的基础上减少对 RAM 的占用，它只需十几
KB的 RAM 和 40KB 左右的 ROM 就可以运行，这使得 LwIP 协议梳适合在低端的嵌
入式系统中使用。 lwIP 协议栈主要关注的是如何减少内存的使用和代码的大小，这
样就可以让 lwIP 适用于资源有限的小型平台，如嵌入式系统。为了简化处理过程和
内存要求， lwIP API 进行了裁减，可以不需要复制一些数据。

Contiki 一个适用于有内存的嵌入式系统的开源的、高可移植的、支持网络的
多任务操作系统。包括一个多任务核心、 TCP/IP 堆栈、程序集及低能耗的无线通信
堆栈。 Contiki 是采用 C 语言开发的非常小型的嵌入式操作系统，运行时只需要几
KB 的内存。 Contiki 是一个小型的、开源的、极易移植的多任务电脑操作系统。它专
门设计以适用于一系列的内存受限的网络系统，包括从 8 位电脑到微型控制器的嵌
入系统。它的名字来自于托尔·海尔达尔的康提基号。 Contiki 只需几 kilobyte 的代码
和几百字节的内存就能提供多任务环境和内建 TCP/IP 支持。

embOS 一个优先级控制的多任务系统，是专门为各种微控制器应用于实时系
统应用的嵌入式操作系统，是一个具有最小 RAM ROM 占用的、高速的、多功能
的高性能工具。贯穿 embOS 的整个开发过程，微控制器有限的资源一直是开发者所
顾忌的。5 年来，该 RTOS 的内部结构已经被优化到不同客户的不同应用中，以满足
工业需要。对不同微控制器的完全源码，使开发者可以很方便地用实时操作系统构
建实时程序。 embOS 是高度模块化的，只有需要的函数才被调用，占用的 ROM 非
常小。最小的内存占用 1KB ROM, 30 字节 RAM 。由于提供源码文件，你可以用
embOS 灵活定制系统以满足实际需求。任务之间可以通过旗语、邮箱和事件安全便
利地通信。

uC/OS II (Micro Control Operation System Two ）是一个可以基于 ROM 运行的
可裁减的、抢占式、实时多任务内核，具有高度可移植性，特别适合于微处理器和
控制器，是和很多商业操作系统性能相当的实时操作系统（RTOS ）。为了提供最好
的移植性能， uC/OS II 最大程度上使用 ANSI C 语言进行开发，并且己经移植到近四
十多种处理器体系上，涵盖了从 8 位到 64 位各种 CPU 包括 DSP ）。 uC/OS II 可以
简单地视为一个多任务调度器，在这个任务调度器之上完善并添加了和多任务操作
系统相关的系统服务，如信号量、邮箱等。其主要特点有公开源代码、代码结构清
晰明了、注释详尽、组织有条理、可移植性好、可裁剪、可固化。内核属于抢占式，
最多可以管理 60 个任务。从 1992 年开始，由于其高度可靠性、移植性和安全性，
uC/OS II 己经广泛使用在从照相机到航空电子产品的各种应用中

TinyOS UC Berkeley （加州大学伯克利分校）开发的开放源代码操作系统，
专为嵌入式无线传感网络设计，操作系统基于构件（ component-based ）的架构使得
快速更新成为可能，而这又减小了受传感网络存储器限制的代码长度。
TinyOS 的构件包括网络协议、分布式服务器、传感器驱动及数据识别工具
良好的电源管理源于事件驱动执行模型，该模型也允许时序安排，具有很好灵活性
TinyOS 己被应用于多个平台和感应板中


OpenWrt 可以被描述为一个嵌入式的 Linux 发行版，（ 主流路由器固件有
dd-wrt tomato openwrt 三类）而不是试图建立一个单一的、静态的系统。 OpenWrt
的包管理提供了一个完全可写的文件系统，从应用程序供应商提供的选择和配置，
并允许自定义设备，以适应任何应用程序。对开发人员来说， OpenWrt 使用框架来构
建应用程序，而无须建立一个完整的固件来支持。对用户来说，这意味着其拥有
全定制的能力，可以用前所未有的方式使用该设备。

QNX 是由加拿大 QSSL 公司（ QNX Software System Ltd. ）开发的分布式实时操
作系统。该操作系统既能运行于以 Intel X86 Pentium CPU 为核心的硬件环境，
也能运行于以 PowerPC MIPS CPU 为核心的硬件环境 QNX 操作系统符合 POSIX 
基本标准和实时标准，使其应用可以方便地进行移植。







• HTTP ，即超文本传输协议，它是当今互联网的基础协议。
• CoAP ，受限制的应用协议，它面向那些资源受限制的物联网设备。
• MQTT ，即消息队列遥测传输，它被设计用于轻量级的发布／订阅式消息传输。


. 连接控制器来控制硬件
. 连接传感器来获取数据
. 连接执行器来执行操作
执行器就相当于输出设备，传感器就相当于输入设备，控制器就是CPU

9600 波特率，即每秒能传输 9600 。






