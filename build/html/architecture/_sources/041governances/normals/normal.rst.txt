常用
####

智者::

    规则对智者来说是指导，对愚蠢者来说是遵从

原则::

    原则不超过10个
    能够写在一个海报上
    不然大家记不住
    原则越多，越易重叠和冲突




最后我想再引用 一个真实的故事，是来源于 NASA 的著名文章《为什么要探索太空？》，文章的背景是来源于 1970 年，赞比亚修女 Mary Jucunda 给 NASA 科学家 Ernst Stuhlinger 博士写了一封信，信中，Mary Jucunda 修女问道：目前地球上还有这么多小孩子吃不上饭，他怎么能舍得为远在火星的项目花费数十亿美元。Ernst Stuhlinger 在回信中写到一个真实的故事如下：

那是在 400 年前，德国某小镇里有一位伯爵。他是个心地善良的人，他将自己收入的一大部分捐给了镇子上的穷人。这十分令人钦佩，因为中世纪时穷人很多，而且那时经常爆发席卷全国的瘟疫。一天，伯爵碰到了一个奇怪的人，他家中有一个工作台和一个小实验室，他白天卖力工作，每天晚上的几小时的时间专心进行研究。他把小玻璃片研磨成镜片，然后把研磨好的镜片装到镜筒里，用此来观察细小的物件。伯爵被这个前所未见的可以把东西放大观察的小发明迷住了。他邀请这个怪人住到了他的城堡里，作为伯爵的门客，此后他可以专心投入所有的时间来研究这些光学器件。然而，镇子上的人得知伯爵在这么一个怪人和他那些无用的玩意儿上花费金钱之后，都很生气。“我们还在受瘟疫的苦，” 他们抱怨道，“而他却为那个闲人和他没用的爱好乱花钱！” 伯爵听到后不为所动。“我会尽可能地接济大家，” 他表示，“但我会继续资助这个人和他的工作，我确信终有一天会有回报。” 果不其然，他的工作（以及同时期其他人的努力）赢来了丰厚的回报：显微镜。显微镜的发明给医学带来了前所未有的发展，由此展开的研究及其成果，消除了世界上大部分地区肆虐的瘟疫和其他一些传染性疾病。伯爵为支持这项研究发明所花费的金钱，其最终结果大大减轻了人类所遭受的苦难，这回报远远超过单纯将这些钱用来救济那些遭受瘟疫的人。

治理和管理的区别
================

::

    治理: governance
    管理: management

区别::

    1. 治理指的是个过程，管理是种方法。
    2. 治理目标是协调多方利益，管理更偏向于管理者的利益。
    3. 治理需要多方共同参与，管理主体相对单一。

    『治理』一般是说该事物存在一定问题
    『管理』则是一般行为


服务治理
========

定义::

     SOA governance
     企业为了确保事情顺利完成而实施的过程，包括最佳实践、架构原则、治理规程、规律以及其他决定性的因素。
     服务治理指的是用来管理 SOA 的采用和实现的过程。


微服务治理的几个点::

    1. 服务注册与发现:
        单体服务拆分为微服务后，如果微服务之间存在调用依赖，就需要得到目标服务的服务地址，
            也就是微服务治理的「服务发现」。
        要完成服务发现，就需要将服务信息存储到某个载体，
            载体本身即是微服务治理的「服务注册中心」
            而存储到载体的动作即是「服务注册」。
    2. 可观测性:
        微服务由于较单体应用有了更多的部署载体，需要对众多服务间的调用关系、状态有清晰的掌控。
        可观测性就包括了调用拓扑关系、监控（Metrics）、日志（Logging）、调用追踪（Trace）等。
    
    3. 流量管理:
        由于微服务本身存在不同版本，在版本更迭过程中，需要对微服务间调用进行控制，以完成微服务版本更迭的平滑。
        这一过程中需要根据流量的特征（访问参数等）、百分比向不同版本服务分发
        这也孵化出灰度发布、蓝绿发布、A/B 测试等服务治理的细分主题。

    4. 安全:
        不同微服务承载自身独有的业务职责
        对于业务敏感的微服务，需要对其他服务的访问进行认证与鉴权，也就是安全问题。

    5. 控制:
        对服务治理能力充分建设后，就需要有足够的控制能力，能实时进行服务治理策略向微服务分发。

服务治理中一些典型的问题是::

    1. 交付价值到利益相关者，这是投入与回报的问题
    2. 对标准和规则的遵从（这是和审计相关的）
    3. 变更管理：变更一个服务通常会引起不可预见的后果，因为服务的消费者对服务的提供者来说是不可知的。
    4. 服务质量的保证：弹性添加新服务需要对这些服务给予额外的关注。

服务治理包括的行为服务治理的一些关键活动包括::

    1. 制定开发新服务和升级现有服务的计划
    2. 管理服务的生命周期：确保升级服务不会影响目前的服务消费者
    3. 制定方针来限制服务行为：制定所有服务都要遵从的规则，确保服务的一致性
    4. 监控服务的性能：由于服务组合，服务停机和性能低下的后果是严重的。
        通过监控服务的性能和可用性，当问题出现的时候能马上采取应对措施。
    5. 管理由谁来调用服务、怎样调用服务



简易的服务治理体系::

    1. 请求网关
    2. 信息采集
        2.1 服务发现: etcd
        2.2 服务日志: log
        2.3 链路跟踪: tracing
    3. 信息分析
        3.1 监控平台: Prometheus, Grafana
        3.2 ES
    4. 治理策略
        4.1 负载均衡
        4.2 请求限流: 限流器
        4.3 服务容错: 断流器
        4.4 服务配置







* 网关: The API Gateway is responsible for request routing, composition, and protocol translation. All requests from clients first go through the API Gateway. It then routes requests to the appropriate microservice. The API Gateway will often handle a request by invoking multiple microservices and aggregating the results. It can translate between web protocols such as HTTP and WebSocket and web‑unfriendly protocols that are used internally.






* 【知乎】到底什么是服务治理？: https://www.zhihu.com/question/56125281