收集2
#####

基础::

    应用编排&管理
    应用配置管理
    应用存储&可持久化存储卷
    应用监控&可观测性
    应用服务&网络

进阶::

    深入理解etcd
    调试&资源管理
    CPU&硬件加速器
    API编程范式
    k8s网络模型
    CNI&CNI网络插件
    集群安装配置&验证
    容器&集群安全
    CRI&安全容器
    多容器运行时



云原生定义&技术要点
===================

定义::

    敏捷
    可扩展&可复制
    愿景: 软件「生在云上、长在云上」

技术范畴::

    云应用定义&开发流程
    云应用编排&管理
    监控&可观测性
    云原生底层技术
    云原生工具集
    Serverless

两个基础理论::

    1. 不可变基础设施
     容器镜像
    2. 云应用编排
     实现：容器设计模式

向云原生演进的意义::

    1. 基础设施的一致性&可靠性
     容器镜像
     自包含
     可漂移
    2. 简单可预测的部署&运维
     自描述&自运维
     流程自动化
     容易水平扩展
     可快速复制的管控系统&支撑组件

容器&镜像
=========

容器定义::

    视图隔离
       能看见部分进程
       独立主机名
    资源可限制
       控制资源使用率
       如内存大小、CPU使用个数
    独立文件系统的进程集合

容器镜像定义::

    运行容器所需的所有文件的集合
    Dockerfile-描述镜像的构建步骤
    changeset:
       构建步骤产生出文件系统的变化
       类似disk snapshot
       提高分发效率，减小磁盘压力

拓展::

    容器的生命周期
    容器项目的架构
    容器 vs VM













