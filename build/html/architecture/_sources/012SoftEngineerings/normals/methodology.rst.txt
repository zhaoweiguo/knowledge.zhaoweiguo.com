编程方法论
##########

五大编程方法论::

    1. 设计思想
    2. 设计原则
    3. 设计模式
    4. 编码规范
    5. 重构技巧




五者之前的关系
==============

面向对象、设计原则、设计模式、编程规范和代码重构，这五者的关系::

    1. 面向对象编程因为其具有丰富的特性（封装、抽象、继承、多态），可以实现很多复杂的设计思路，
        是很多设计原则、设计模式等编码实现的基础。

    2. 设计原则是指导我们代码设计的一些经验总结，对于某些场景下，是否应该应用某种设计模式，具有指导意义。
        比如，“开闭原则” 是很多设计模式（策略、模板等）的指导原则。

    3. 设计模式是针对软件开发中经常遇到的一些设计问题，总结出来的一套解决方案或者设计思路。
        应用设计模式的主要目的是提高代码的可扩展性。
        从抽象程度上来讲，设计原则比设计模式更抽象。设计模式更加具体、更加可执行。

    4. 编程规范主要解决的是代码的可读性问题。
        编码规范相对于设计原则、设计模式，更加具体、更加偏重代码细节、更加能落地。
        持续的小重构依赖的理论基础主要就是编程规范。

    5. 重构作为保持代码质量不下降的有效手段
        利用的就是面向对象、设计原则、设计模式、编码规范这些理论。



.. image:: https://img.zhaoweiguo.com/knowledge/images/soft-engineerings/sum1.png






