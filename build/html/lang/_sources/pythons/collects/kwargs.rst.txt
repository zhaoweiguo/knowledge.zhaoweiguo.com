关键字参数解包
##############

* kwargs: keyword argument unpacking(关键字参数解包)


语法::

    **kwargs

* 主要作用是将一个字典中的所有键值对作为关键字参数传递给一个函数、类、或方法。这使得你可以动态地构建参数，并灵活地传递给函数，从而提高代码的灵活性和可读性。

使用场景::

    动态参数
        需要将一个字典中的参数动态传递给一个函数时，** 语法可以将字典中的所有键值对展开，并作为关键字参数传递给函数。
        这在处理动态配置、外部数据或参数可变的情况下非常有用。
    参数转发
        需要将函数参数直接转发给其他函数。这时，可以使用 **kwargs 来接受所有关键字参数，然后通过 **kwargs 转发给其他函数。
    字典解包
        当需要将字典的内容与其他参数一起传递给函数时，** 语法非常方便


示例::

    # 定义一个函数，接受关键字参数
    def display_info(name, age, **kwargs):
        print(f"Name: {name}, Age: {age}")
        for key, value in kwargs.items():
            print(f"{key}: {value}")

    # 定义一个字典
    external_data = {
        "location": "New York",
        "occupation": "Engineer",
        "hobby": "Reading"
    }

    # 使用 **external_data 解包并传递给函数
    display_info("Alice", 30, **external_data)
























