2308.10848_AgentVerse: Facilitating Multi-Agent Collaboration and Exploring Emergent Behaviors
##############################################################################################

* https://arxiv.org/abs/2308.10848
* 组织：清华、北邮、腾讯WeChat AI
* 被LLMs赋能的自治Agent已经有了重大改进，使它们能处理广泛的泛化任务。然而，在现实世界的场景中，通常需要个人之间的合作来提高任务完成的效率和有效性。因此，受人类群体动力学的启发，我们提出了一个多智能体框架，它可以协作和动态地调整其组成，组成一个1=1>2系统。我们的实验表明， framework可以高效地部署性能优于单个代理的多代理组。此外，我们深入研究了在协作任务完成过程中群体内个体代理之间社会行为的出现。鉴于这些行为，我们讨论了一些可能的策略，以利用积极的和减轻消极的，以提高多智能体组的协作潜力。
* Autonomous agents empowered by Large Language Models (LLMs) have undergone significant improvements, enabling them to generalize across a broad spectrum of tasks. However, in real-world scenarios, cooperation among individuals is often required to enhance the efficiency and effectiveness of task accomplishment. Hence, inspired by human group dynamics, we propose a multi-agent framework that can collaboratively and dynamically adjust its composition as a greater-than-the-sum-of-its-parts system. Our experiments demonstrate that framework can effectively deploy multi-agent groups that outperform a single agent. Furthermore, we delve into the emergence of social behaviors among individual agents within a group during collaborative task accomplishment. In view of these behaviors, we discuss some possible strategies to leverage positive ones and mitigate negative ones for improving the collaborative potential of multi-agent groups.



* https://github.com/OpenBMB/AgentVerse/



.. figure:: https://img.zhaoweiguo.com/uPic/2024/08/o2OTBo.png

    Figure 1: An illustration of the AGENTVERSE


AGENTVERSE splits the problem-solving process into four pivotal stages as shown in Figure 1::

    1. Expert Recruitment: 
        Determine and adjust the agent group’s composition based on the ongoing problem-solving progression.
        根据正在进行的问题解决进展确定和调整代理组的组成
    2. Collaborative Decision-Making:
        Engage the selected agents in joint discussions to devise problem-solving strategies.
        让选定的代理人参与联合讨论，以制定解决问题的策略
    3. Action Execution:
        Agents interact with their environment to implement the devised actions.
        代理与他们的环境交互以实施设计的动作
    4. Evaluation - Assess the differences between the current state and desired outcomes. 
        If the current state is unsatisfactory, feedback is given to the next iteration for further refinement.
        如果当前状态不令人满意，则会将反馈提供给下一次迭代以进行进一步优化


::

    3.1 GENERAL UNDERSTANDING AND REASONING CAPABILITIES
    3.2 CODING CAPABILITIES
    3.3 TOOL UTILIZATION CAPABILITIES



.. figure:: https://img.zhaoweiguo.com/uPic/2024/08/Qg9DNe.png

.. figure:: https://img.zhaoweiguo.com/uPic/2024/08/5FHsuL.png

    Figure 20: An example process of three agents crafting a bookshelf in Minecraft.








理念
====

Environment
-----------

* Describer（描述器）：此组件为每个智能体在每一轮提供环境的描述。您可以自定义描述器来定义他们的环境的具体要求，例如一个智能体可以与哪些智能体互动。
* Order（顺序）：此组件定义智能体在环境中采取行动的顺序。您可以自定义顺序以反映智能体之间所需的交互。我们提供了几个基本的顺序选项，包括random（随机），sequential（连续）和concurrent（所有智能体在每轮都采取行动）。
* Selector（选择器）：此组件选择由智能体生成的有效消息。有时智能体可能生成无效的响应，选择器用于过滤出意外的结果。
* Updater（更新器）：此组件更新每个智能体的记忆。在某些情况下，一个智能体生成的响应不应被所有智能体看到（例如，如果智能体在不同的房间里）。对于每个响应，更新器只更新可以看到它的智能体。
* Visibility（可见性）：此组件维护每个智能体在环境变化中可以看到的智能体列表。例如，当一个智能体从一个房间移动到另一个房间时，每个智能体的可见智能体列表应由visibility更新。


智能体
------

* ConversationAgent（对话智能体）
* ToolAgent（工具智能体）












































