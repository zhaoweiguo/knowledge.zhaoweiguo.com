ReAct框架
#########

* ReAct框架的核心思想是将推理和行动相结合，使得模型不仅能够生成文本回答，还能够在需要时执行特定的行动（如检索信息、执行计算等），从而更好地完成任务。它通过将推理和行动结合在一个统一的框架内，使得模型可以根据上下文动态地决定是继续推理还是执行具体行动。



组成部分
========

* 推理（Reasoning）：指模型生成文本的能力，包括回答问题、生成解释、提出假设等。推理部分依赖于预训练的语言模型，利用其强大的语言生成能力来进行复杂的思维过程。
* 行动（Acting）：指模型执行特定操作的能力，如调用外部API、进行数据库查询、执行计算等。行动部分通常通过预定义的操作接口来实现，允许模型在推理过程中根据需要执行具体的操作。


工作流程
========

* 问题输入：用户输入一个问题或任务。
* 推理阶段：模型开始生成初步的推理结果。如果推理过程中需要外部信息或特定操作，模型会决定进入行动阶段。
* 行动阶段：模型调用相关操作接口执行具体行动，如检索信息、计算结果等。
* 结果整合：行动阶段的结果返回后，模型将其与先前的推理结果整合，继续进行下一步推理或生成最终答案。
* 输出结果：最终的答案或解决方案返回给用户。


.. note:: 形成“思考-行动-思考-行动…”的循环模式


优势
====

* 增强推理能力：通过结合行动，模型可以获取更多的外部信息，弥补预训练模型知识的不足，从而增强其推理能力。
* 动态决策：模型可以根据上下文动态决策，灵活地选择推理或行动，适应复杂任务需求。
* 扩展性强：通过定义新的操作接口，可以不断扩展模型的行动能力，适应不同领域的应用需求。


示例
====

* 智能客服：在回答用户问题时，模型可以动态检索知识库中的最新信息，提供更准确的回答。
* 自动化助理：模型可以根据用户指令执行具体操作，如调度日程、查询天气等。
* 科学研究：在进行复杂问题推理时，模型可以调用外部数据源或计算工具，辅助完成科研任务。











































